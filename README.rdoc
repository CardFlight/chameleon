= Chameleon

* http://github.com/ejdraper/chameleon

== DESCRIPTION:

This is a Rails engine designed to make it super easy to expose data from your application as widgets for use with Geckoboard (http://geckoboard.com).

This only works for Rails 3 apps.

== FEATURES:

This provides a generator to build widgets using a basic DSL syntax to describe the data to be exposed, and the settings for it to be exposed under, and also includes the controller/routing necessary to provide an endpoint for Geckoboard to retrieve the data to display on your dashboard.

Currently it supports just the "number and optional secondary stat" widget type, with more widget types to follow shortly.

== SYNOPSIS:

Simply add to your Gemfile as follows:

  gem 'chameleon'

Then run "bundle install" and once installed, you can run:

  rails g chameleon:widget NAME TYPE

to generate a widget within "app/widgets". For example, if you want to generate a widget that exposes the amount of users you have in your app currently:

  rails g chameleon:widget users number_and_secondary

This will generate something similar to the following in "app/widgets/users_widget.rb":

  widget :users do
    key "3638c90ec12d5a59061ad7b78afcbd050e50b621"
    type "number_and_secondary"
    data do
    end
  end

To implement your widget, you simply need to alter it to return the required data - for a "number_and_secondary" type of widget, it requires an array containing two values, the first being the current value, and the last being the value to compare it to (such as user count as of yesterday, for example):

  widget :users do
    key "3618c90ec02d5a57061ad7b78afcbb050e50b608"
    type "number_and_secondary"
    data do
      [User.count, User.count(:conditions => "created_at < '#{1.day.ago.to_s(:db)}'")]
    end
  end

You can then point Geckoboard at your widget, http://myapp/widgets/users?key=3618c90ec02d5a57061ad7b78afcbb050e50b608, and Geckoboard will then show the current user count, as well as the percentage difference compared to a day ago. You can optionally just return a single value too, if you don't want the secondary stat.

By default the widgets are secured by the key which is autogenerated within the widget - this has to be passed in via the querystring for the widget to function, as seen above. You can change this value to anything you consider secure, and if you require a parameter other than :key to be used for this security check, you can define the parameter as such:

  widget :users do
    key "my_updated_key"
    key_parameter :token
    type "number_and_secondary"
    data do
      [User.count, User.count(:conditions => "created_at < '#{1.day.ago.to_s(:db)}'")]
    end
  end

This will now expect the key to be passed in as the :token parameter, for example http://myapp/widgets/users?token=my_updated_key. For data that is acceptable to be publically exposed, you can exclude the key and set the widget as public as follows:

  widget :users do
    public true
    type "number_and_secondary"
    data do
      [User.count, User.count(:conditions => "created_at < '#{1.day.ago.to_s(:db)}'")]
    end
  end

This will now be accessible simply at http://myapp/widgets/users.

Full documentation on the different widget types and data will follow once the other widget types are implemented, but this basic syntax should provide an easy way to expose data from your Rails 3 application to Geckoboard quickly and easily.

== REQUIREMENTS:

A Rails 3 application.

== INSTALL:

It's best to add it to the Gemfile for your Rails 3 app, but if needed you can install the gem manually:

  gem install chameleon

== LICENSE:

Copyright 2010 Elliott Draper <el@ejdraper.com>

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
